apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    argocd.argoproj.io/instance: sp-apac-prod2-knative-dist-chan-kafka
    kafka.eventing.knative.dev/release: v1.3.1
  name: kafka-webhook
  namespace: knative-eventing
spec:
  progressDeadlineSeconds: 600
  replicas: 5
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kafka-webhook
      role: kafka-webhook
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: kafka-webhook
        role: kafka-webhook
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: METRICS_DOMAIN
          value: knative.dev/eventing
        - name: WEBHOOK_NAME
          value: kafka-webhook
        - name: WEBHOOK_PORT
          value: "8443"
        - name: RESETOFFSET_SUPPORT
          value: "true"
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election-kafkachannel
        # image: gcr.io/knative-releases/knative.dev/eventing-kafka/cmd/webhook@sha256:ad4715ccd83db0a4979a5f96d3716c728f072c0faa1f35726dc4ec75f5677261
        image: quay.io/zhangj30_lnlp/eventing-kafka_webhook:release-1.3-a0579e7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: webhook
            path: /
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        name: kafka-webhook
        ports:
        - containerPort: 8443
          name: https-webhook
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        - containerPort: 8008
          name: profiling
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: webhook
            path: /
            port: 8443
            scheme: HTTPS
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 25m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      nodeSelector:
        deployment.group: contentplatform-prod
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kafka-webhook
      serviceAccountName: kafka-webhook
      terminationGracePeriodSeconds: 300
