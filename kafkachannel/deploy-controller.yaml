apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: eventing-kafka-channel-controller
    argocd.argoproj.io/instance: sp-apac-prod2-knative-dist-chan-kafka
    kafka.eventing.knative.dev/release: v1.3.1
  name: eventing-kafka-channel-controller
  namespace: knative-eventing
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: eventing-kafka-channel-controller
      name: eventing-kafka-channel-controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: eventing-kafka-channel-controller
        name: eventing-kafka-channel-controller
    spec:
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election-kafkachannel
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.serviceAccountName
        - name: METRICS_PORT
          value: "8081"
        - name: METRICS_DOMAIN
          value: eventing-kafka
        - name: RECEIVER_IMAGE
          value: gcr.io/knative-releases/knative.dev/eventing-kafka/cmd/channel/distributed/receiver@sha256:f0c7dc32d840c897535211e69049699b3c84e9baccadb77636550b00d435deb9
        - name: DISPATCHER_IMAGE
          value: gcr.io/knative-releases/knative.dev/eventing-kafka/cmd/channel/distributed/dispatcher@sha256:08b2fa2a1a14a7bdaabc2744281f078efa920bea9882ff28e2d5db20f3cc6dac
        image: quay.io/zhangj30_lnlp/eventing-kafka_distributed-controller:release-1.3-f74c7fc
        imagePullPolicy: IfNotPresent
        name: eventing-kafka
        ports:
        - containerPort: 8081
          name: metrics
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config-kafka
          name: config-kafka
      dnsPolicy: ClusterFirst
      nodeSelector:
        deployment.group: contentplatform-prod
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: eventing-kafka-channel-controller
      serviceAccountName: eventing-kafka-channel-controller
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: config-kafka
        name: config-kafka
